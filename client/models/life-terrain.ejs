<div id="container"></div>
<div id="histogram-vx"></div>
<div id="histogram-vy"></div>
<script>
  const {
    Agent,
    Environment,
    GridEnvironment,
    Histogram,
    ASCIIRenderer,
    CanvasRenderer,
    utils,
    Vector,
    KDTree,
    Terrain,
    Colors
  } = flocc;
  const { random } = utils;

  /* ------- PARAMETERS --------- */
  const width = 660;
  const height = 660;

  /* ---------------------------- */

  /* ------- SET UP ENVIRONMENT, RENDERER --------- */

  const environment = new Environment({ width, height });
  const renderer = new CanvasRenderer(environment, { width, height });
  renderer.mount("#container");

  const terrain = new Terrain(width / 3, height / 3, {
    // remove or set this to false to
    // use color mode
    grayscale: true,
    scale: 3
  });
  environment.use(terrain);

  const DEAD = 0;
  const ALIVE = 255;

  function setup() {
    terrain.init((x, y) => (Math.abs(Math.sin(x * y)) < 0.1 ? ALIVE : DEAD));
  }

  terrain.addRule((x, y) => {
    const self = terrain.sample(x, y);
    const isSelfAlive = self === ALIVE;
    const livingNeighbors = terrain
      .neighbors(x, y, 1, true)
      .filter(v => v === ALIVE).length;

    if (isSelfAlive && livingNeighbors < 2) return DEAD;
    if (isSelfAlive && livingNeighbors > 3) return DEAD;
    if (!isSelfAlive && livingNeighbors === 3) return ALIVE;
  });

  function run() {
    environment.tick();
    setTimeout(run, 50);
  }

  setup();
  run();
</script>
